CREATE TABLE transactions
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITH TIME ZONE                NOT NULL DEFAULT NOW(),
    wallet_id   BIGINT                                  NOT NULL,
    category_id BIGINT                                  NOT NULL,
    amount      BIGINT                                  NOT NULL,
    description TEXT                                    NULL,
    owner_id    UUID                                    NOT NULL,
    CONSTRAINT transactions_pkey PRIMARY KEY (id),
    CONSTRAINT transactions_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES wallets (id) ON DELETE CASCADE,
    CONSTRAINT transactions_category_id_fkey FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT transactions_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES auth.users (id) ON DELETE CASCADE,

    CONSTRAINT transactions_amount_check CHECK ((amount > 0)),
    CONSTRAINT transactions_description_check CHECK (LENGTH(description) BETWEEN 1 AND 64)
);

ALTER TABLE transactions
    ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable access for users based on owner_id"
    ON transactions
    AS PERMISSIVE
    FOR ALL
    TO authenticated
    USING (((SELECT auth.uid() AS uid) = owner_id))
    WITH CHECK (((SELECT auth.uid() AS uid) = owner_id));