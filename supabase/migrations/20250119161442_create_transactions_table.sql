create table
    public.transactions
(
    id          bigint generated by default as identity not null,
    created_at  timestamp with time zone                not null default now(),
    wallet_id   bigint                                  not null,
    category_id bigint                                  not null,
    amount      bigint                                  not null,
    description text null,
    owner_id    uuid                                    not null,
    constraint transactions_pkey primary key (id),
    constraint transactions_wallet_id_fkey foreign key (wallet_id) references wallets (id) on delete cascade,
    constraint transactions_category_id_fkey foreign key (category_id) references categories (id) on delete cascade,
    constraint transactions_owner_id_fkey foreign key (owner_id) references auth.users (id) on delete cascade,
    constraint transactions_amount_check check ((amount > 0))
) tablespace pg_default;

alter table public.transactions enable row level security;

create
policy "Enable access for users based on owner_id"
       on public.transactions
       as permissive
       for all
       to authenticated
       using ((( SELECT auth.uid() AS uid) = owner_id))
       with check ((( SELECT auth.uid() AS uid) = owner_id))